C51 COMPILER V9.60.7.0   LAB8_3                                                            03/13/2023 15:04:09 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LAB8_3
OBJECT MODULE PLACED IN .\Objects\lab8_3.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lab8_3.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\la
                    -b8_3.lst) TABS(2) OBJECT(.\Objects\lab8_3.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          sbit SWITCH = P1^0;
   5          int time;
   6          char seconds;
   7          char mins;
   8          int prev_time;
   9          
  10          void main(void){
  11   1        lcd_init();
  12   1        lcd_cmd(0x01);
  13   1        msdelay(4);
  14   1        lcd_cmd(0x80);
  15   1        msdelay(4);
  16   1        lcd_write_string("     START      ");
  17   1        lcd_cmd(0xC0);
  18   1        lcd_write_string("     00:00      ");
  19   1        prev_time = 0;
  20   1        TMOD = 0x05; // Timer mode 1 with external counter
  21   1        TH0 = 0x00;
  22   1        TL0 = 0x00;
  23   1        while(SWITCH == 0); // wait for DIP switch to be on
  24   1        TR0 = 1;
  25   1        // at each increment of the counter, 1/60 seconds have passed
  26   1        while(SWITCH == 1){
  27   2          time = TL0 + (TH0 << 8); // both are 8b counters
  28   2          time = (time - time%60)/60; //convert to seconds
  29   2          if (time != prev_time){
  30   3            seconds = time%60;
  31   3            mins = (time - seconds)/60;
  32   3            lcd_cmd(0xC0);
  33   3            lcd_write_string("     ");
  34   3            lcd_write_char((mins - mins%10)/10 + 48);
  35   3            lcd_write_char(mins%10 + 48);
  36   3            lcd_write_char(':');
  37   3            lcd_write_char((seconds - seconds%10)/10 + 48);
  38   3            lcd_write_char(seconds%10 + 48);
  39   3            prev_time = time;
  40   3          }
  41   2          
  42   2        };
  43   1        TR0 = 0;
  44   1        lcd_cmd(0x80);
  45   1        lcd_write_string("      STOP      ");
  46   1        while(1);
  47   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    452    ----
   CONSTANT SIZE    =     57    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.60.7.0   LAB8_3                                                            03/13/2023 15:04:09 PAGE 2   

   DATA SIZE        =      6       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
