C51 COMPILER V9.60.7.0   SORT                                                              02/27/2023 14:05:08 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SORT
OBJECT MODULE PLACED IN .\Objects\sort.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE sort.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\sort
                    -.lst) TABS(2) OBJECT(.\Objects\sort.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          code unsigned char blank[]="                ";
   5          unsigned char in;
   6          unsigned char inputs[5];
   7          unsigned char i;
   8          unsigned char j;
   9          
  10          void main() {
  11   1        // take all inputs---------------------------------------------------
  12   1        P1 = 0x00;
  13   1        lcd_init();
  14   1        lcd_cmd(0x80);                          //Move cursor to first line
  15   1        msdelay(4);
  16   1        lcd_write_string("  START PROGRAM ");
  17   1        msdelay(5000);
  18   1        lcd_cmd(0x80);
  19   1        lcd_write_string("  FIRST INPUT   ");
  20   1        P1 = 0x0F;                              //Prepare for input
  21   1        msdelay(5000);
  22   1        in = P1&0x0F;                           //First input
  23   1        inputs[0]=in;
  24   1        for(i = 1; i<=4;i++){
  25   2          lcd_cmd(0x80);
  26   2          lcd_write_string("   NEXT INPUT   ");
  27   2          in = in*16;                             //Roll left by 4 bits
  28   2          P1 = in|0x0F;                           //Display output and make the lower nibble ready for input
  29   2          msdelay(5000);
  30   2          in = P1&0x0F;                           //Take input
  31   2          inputs[i] = in;                         //Store in array
  32   2          lcd_cmd(0x80);
  33   2          lcd_write_string(blank);
  34   2          msdelay(500);                           //Just to make inputs easier
  35   2        }
  36   1        lcd_cmd(0x80);
  37   1        lcd_write_string("   SORTING...   ");
  38   1        in = in*16;
  39   1        P1 = in;
  40   1        msdelay(5000);
  41   1        
  42   1        // sort--------------------------------------------------------------
  43   1        for (i = 0; i<=4; i++){
  44   2            for (j = i+1; j<=4; j++) {
  45   3              if (inputs[i] > inputs[j]) {      //Bubble sort lmao
  46   4                inputs[i] = inputs[i] + inputs[j];
  47   4                inputs[j] = inputs[i] - inputs[j];
  48   4                inputs[i] = inputs[i] - inputs[j];
  49   4              }
  50   3            }
  51   2        }
  52   1        P1 = 0x00;
  53   1        msdelay(1000);
  54   1        lcd_cmd(0x80);
C51 COMPILER V9.60.7.0   SORT                                                              02/27/2023 14:05:08 PAGE 2   

  55   1        lcd_write_string("     SORTING    ");
  56   1        lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  57   1        lcd_write_string("    COMPLETE    ");
  58   1        msdelay(1000);
  59   1        
  60   1        //display sorted------------------------------------------------------
  61   1        for (i = 0; i<=4; i++){
  62   2          P1 = inputs[i]*16;
  63   2          msdelay(5000);
  64   2          P1 = 0x00;
  65   2          msdelay(1000);
  66   2        }
  67   1        
  68   1        //take input for search-----------------------------------------------
  69   1        P1 = 0xFF;
  70   1        lcd_cmd(0x80);
  71   1        lcd_write_string("  NUMBER TO BE  ");
  72   1        lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  73   1        lcd_write_string("    SEARCHED    ");
  74   1        msdelay(5000);
  75   1        in = P1&0x0F;
  76   1        lcd_cmd(0x80);
  77   1        lcd_write_string(blank);
  78   1        lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  79   1        lcd_write_string(blank);
  80   1        msdelay(1000);
  81   1        
  82   1        //search for number and display---------------------------------------------------
  83   1        j = 0;
  84   1        for (i = 0; i<=4; i++){
  85   2          if (inputs[i]==in){
  86   3            j = 1;
  87   3            break;
  88   3          }
  89   2        }
  90   1        if (j==1) {
  91   2          lcd_cmd(0x80);
  92   2          lcd_write_string("THE INDEX IS");
  93   2          P1 = (i+1)*16;
  94   2        } else {
  95   2          lcd_cmd(0x80);
  96   2          lcd_write_string("     NUMBER     ");
  97   2          lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  98   2          lcd_write_string("   NOT FOUND    ");
  99   2          P1 = 0xF0;
 100   2        }
 101   1        
 102   1        while(1);
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    659    ----
   CONSTANT SIZE    =    200    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
