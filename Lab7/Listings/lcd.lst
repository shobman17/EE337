C51 COMPILER V9.60.7.0   LCD                                                               03/05/2023 16:46:36 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lcd.l
                    -st) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include <at89c5131.h>
   2          #include "lcd.h"
   3          
   4          unsigned char correct_pass[]="15A8*D6#";
   5          code unsigned char rows[] = "123A456B789C*0#D";
   6          unsigned int addr;
   7          unsigned char input;
   8          unsigned char check;
   9          unsigned char input_pass[8];
  10          unsigned char i;
  11          unsigned char j;
  12          
  13          void main()
  14          {
  15   1        lcd_init();
  16   1        lcd_cmd(0x80);                          //Move cursor to first line
  17   1        msdelay(4);
  18   1        lcd_write_string("Enter Password: ");
  19   1        lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  20   1        msdelay(4);
  21   1        
  22   1        for(j = 0; j<8; j++){
  23   2          while(1){                               //Will keep running till a key is pressed
  24   3            addr = &rows;
  25   3            P3 = 0x0F;                            //Ground all rows, read all columns
  26   3            input = P3;
  27   3            while(input != 0x0F){                 //Wait for all keys to be released
  28   4              input = P3;
  29   4            }
  30   3            while(input == 0x0F) {                //Wait for any key to be pressed
  31   4              input = P3;
  32   4            }
  33   3            msdelay(20);                          //Debounce delay
  34   3            input = P3;
  35   3            if(input != 0x0F){
  36   4              check = 0x10;
  37   4              for(i = 0; i<4; i++){               //Check all rows
  38   5                P3 = 0xFF - check;
  39   5                input = P3&0x0F;
  40   5                if(input != 0x0F){                //Scan all columns of that row
  41   6                  input = 0x0F - input;
  42   6                  while(input != 0x01){
  43   7                    addr = addr + 1;
  44   7                    input >> 1;
*** WARNING C275 IN LINE 44 OF lcd.c: expression with possibly no effect
  45   7                  }
  46   6                  input = *(char*)addr;           //Get the character corresponding to input button
  47   6                  lcd_write_char(input);          //Write the character to the lcd
  48   6                  input_pass[j] = input;          //Store input of keyboard in an array
  49   6                }
  50   5                addr = addr + 4;
  51   5                check = check << 1;
  52   5              }
  53   4              break;
C51 COMPILER V9.60.7.0   LCD                                                               03/05/2023 16:46:36 PAGE 2   

  54   4            }
  55   3          }
  56   2        }
  57   1      
  58   1        if(input_pass == correct_pass){
  59   2          lcd_cmd(0x80);                          //Move cursor to first line
  60   2          msdelay(4);
  61   2          lcd_write_string("Correct Password");
  62   2          lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  63   2          msdelay(4);
  64   2          lcd_write_string(" Access Granted ");
  65   2        } else {
  66   2          lcd_cmd(0x80);                          //Move cursor to first line
  67   2          msdelay(4);
  68   2          lcd_write_string(" Wrong Password ");
  69   2          lcd_cmd(0xC0);                          //Move cursor to 2nd line of LCD
  70   2          msdelay(4);
  71   2          lcd_write_string("  Access Denied ");
  72   2        }
  73   1        while(1);
  74   1      }
  75            
  76            
  77              


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    424    ----
   CONSTANT SIZE    =    102    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
